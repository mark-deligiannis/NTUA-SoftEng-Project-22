{
	"info": {
		"_postman_id": "3686aedc-f3b9-43b2-bee7-554fca84d6a8",
		"name": "Intelliq_API",
		"description": "#### This API provides backend services for the management of smart questionnaires. It may be used by frontend servers or CLIs to abstract away interactions with the database and keep the code modular, scalable and maintainable.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25603158"
	},
	"item": [
		{
			"name": "admin/healthcheck",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var expected_result = {\r",
							"    \"status\": \"OK\",\r",
							"    \"dbconnection\": \"mariadb://root:@localhost:3306/intelliQ\"\r",
							"}\r",
							"\r",
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Expected Result\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.eql(expected_result);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "localhost:9103/intelliq_api/admin/healthcheck",
					"host": [
						"localhost"
					],
					"port": "9103",
					"path": [
						"intelliq_api",
						"admin",
						"healthcheck"
					]
				},
				"description": "## Description\n\nRuns a health check of the database.\n\n## returns\n\nOn success:\n\n``` json\n{\n    \"status\": \"OK\",\n    \"dbconnection\": //connection string//\n}\n\n```\n\nOn failure:\n\n``` json\n{\n    \"status\": \"failed\",\n    \"dbconnection\": //connection string//\n}\n\n```"
			},
			"response": []
		},
		{
			"name": "admin/healthcheck (csv)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var expected_result = `\"status\",\"dbconnection\"\\r\r",
							"\"OK\",\"mariadb://root:@localhost:3306/intelliQ\"`\r",
							"\r",
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Expected Result\", function () {\r",
							"    var data = pm.response.text();\r",
							"    pm.expect(data).to.eql(expected_result);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": []
						}
					]
				},
				"url": {
					"raw": "localhost:9103/intelliq_api/admin/healthcheck?format=csv",
					"host": [
						"localhost"
					],
					"port": "9103",
					"path": [
						"intelliq_api",
						"admin",
						"healthcheck"
					],
					"query": [
						{
							"key": "format",
							"value": "csv"
						}
					]
				},
				"description": "## Description\n\nRuns a health check of the database.\n\n## returns\n\nOn success:\n\n\"status\",\"dbconnection\"\n\n\"OK\",\"mariadb://root:@localhost:3306/intelliQ\"\n\nOn failure:\n\n\"status\",\"dbconnection\"\n\n\"failed\", //connection string//"
			},
			"response": []
		},
		{
			"name": "admin/resetall",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var expected_result = {\r",
							"    \"status\": \"OK\"\r",
							"}\r",
							"\r",
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Expected Result\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.eql(expected_result);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "localhost:9103/intelliq_api/admin/resetall",
					"host": [
						"localhost"
					],
					"port": "9103",
					"path": [
						"intelliq_api",
						"admin",
						"resetall"
					]
				},
				"description": "## Description\n\nReset the entire database.\n\n## returns\n\nOn success:\n\n``` json\n{ \"status\": \"OK\" }\n\n```\n\nOn failure:\n\n``` json\n{ \"status\": \"failed\", \"reason\": //error message// }\n\n```"
			},
			"response": []
		},
		{
			"name": "admin/resetall (csv)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var expected_result = `\"status\"\\r\\n\"OK\"`;\r",
							"\r",
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Expected Result\", function () {\r",
							"    var data = pm.response.text();\r",
							"    pm.expect(data).to.eql(expected_result);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "localhost:9103/intelliq_api/admin/resetall?format=csv",
					"host": [
						"localhost"
					],
					"port": "9103",
					"path": [
						"intelliq_api",
						"admin",
						"resetall"
					],
					"query": [
						{
							"key": "format",
							"value": "csv"
						}
					]
				},
				"description": "## Description\n\nReset the entire database.\n\n## returns\n\nOn success:\n\n\"status\"\n\n\"OK\"\n\nOn failure:\n\n\"status\",\"reason\"\n\n\"OK\",//error message//"
			},
			"response": []
		},
		{
			"name": "admin/resetq",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var expected_result = {\r",
							"    \"status\": \"OK\"\r",
							"}\r",
							"\r",
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Expected Result\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.eql(expected_result);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "localhost:9103/intelliq_api/admin/resetq/QQ001",
					"host": [
						"localhost"
					],
					"port": "9103",
					"path": [
						"intelliq_api",
						"admin",
						"resetq",
						"QQ001"
					]
				},
				"description": "## Description\n\nDeletes all answers to the specified questionnaire.\n\n## returns\n\nOn success:\n\n``` json\n{ \"status\": \"OK\" }\n\n```\n\nOn failure:\n\n``` json\n{ \"status\": \"failed\", \"reason\": //error message// }\n\n```"
			},
			"response": []
		},
		{
			"name": "admin/resetq (csv)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var expected_result = `\"status\"\\r\\n\"OK\"`;\r",
							"\r",
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Expected Result\", function () {\r",
							"    var data = pm.response.text();\r",
							"    pm.expect(data).to.eql(expected_result);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "localhost:9103/intelliq_api/admin/resetq/QQ001?format=csv",
					"host": [
						"localhost"
					],
					"port": "9103",
					"path": [
						"intelliq_api",
						"admin",
						"resetq",
						"QQ001"
					],
					"query": [
						{
							"key": "format",
							"value": "csv"
						}
					]
				},
				"description": "## Description\n\nDeletes all answers to the specified questionnaire.\n\n## returns\n\nOn success:\n\n\"status\"\n\n\"OK\"\n\nOn failure:\n\n\"status\",\"reason\"\n\n\"OK\",//error message//"
			},
			"response": []
		},
		{
			"name": "admin/questionnaire_upd (1)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "dummydata_main.json"
						}
					]
				},
				"url": {
					"raw": "localhost:9103/intelliq_api/admin/questionnaire_upd",
					"host": [
						"localhost"
					],
					"port": "9103",
					"path": [
						"intelliq_api",
						"admin",
						"questionnaire_upd"
					]
				},
				"description": "## Description\n\nInserts questionnaire to database.\n\n## returns\n\nNone"
			},
			"response": []
		},
		{
			"name": "fetchkeywords",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var expected_result = {\r",
							"    \"Keywords\": [\r",
							"        \"Courses\",\r",
							"        \"NTUA\",\r",
							"        \"ΕΜΠ\",\r",
							"        \"Μαθήματα\"\r",
							"    ]\r",
							"};\r",
							"\r",
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Expected Result\", function () {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data).to.eql(expected_result);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": []
				},
				"url": {
					"raw": "localhost:9103/intelliq_api/fetchkeywords",
					"host": [
						"localhost"
					],
					"port": "9103",
					"path": [
						"intelliq_api",
						"fetchkeywords"
					]
				},
				"description": "## Description\n\nFetches every keyword registered to the database.\n\n## returns\n\nOn success:\n\n``` json\n{ \"Keywords\": //Array of keywords// }\n\n```\n\nOn failure:\n\nNone"
			},
			"response": []
		},
		{
			"name": "fetchkeywords (csv)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var expected_result = `\"Keywords\"\\r\r",
							"\"Courses\"\\r\r",
							"\"NTUA\"\\r\r",
							"\"ΕΜΠ\"\\r\r",
							"\"Μαθήματα\"`;\r",
							"\r",
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Expected Result\", function () {\r",
							"    var data = pm.response.text();\r",
							"    pm.expect(data).to.eql(expected_result);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": []
				},
				"url": {
					"raw": "localhost:9103/intelliq_api/fetchkeywords?format=csv",
					"host": [
						"localhost"
					],
					"port": "9103",
					"path": [
						"intelliq_api",
						"fetchkeywords"
					],
					"query": [
						{
							"key": "format",
							"value": "csv"
						}
					]
				},
				"description": "## Description\n\nFetches every keyword registered to the database.\n\n## returns\n\nOn success:\n\n\"Keywords\"\n\n//keywords//\n\nOn failure:\n\nNone"
			},
			"response": []
		},
		{
			"name": "admin/questionnaire_upd (2)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "dummydata2.json"
						}
					]
				},
				"url": {
					"raw": "localhost:9103/intelliq_api/admin/questionnaire_upd",
					"host": [
						"localhost"
					],
					"port": "9103",
					"path": [
						"intelliq_api",
						"admin",
						"questionnaire_upd"
					]
				},
				"description": "## Description\n\nInserts questionnaire to database.\n\n## returns\n\nNone"
			},
			"response": []
		},
		{
			"name": "admin/questionnaire_upd (3)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "dummydata3.json"
						}
					]
				},
				"url": {
					"raw": "localhost:9103/intelliq_api/admin/questionnaire_upd",
					"host": [
						"localhost"
					],
					"port": "9103",
					"path": [
						"intelliq_api",
						"admin",
						"questionnaire_upd"
					]
				},
				"description": "## Description\n\nInserts questionnaire to database.\n\n## returns\n\nNone"
			},
			"response": []
		},
		{
			"name": "admin/questionnaire_upd (4)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "dummydata4.json"
						}
					]
				},
				"url": {
					"raw": "localhost:9103/intelliq_api/admin/questionnaire_upd",
					"host": [
						"localhost"
					],
					"port": "9103",
					"path": [
						"intelliq_api",
						"admin",
						"questionnaire_upd"
					]
				},
				"description": "## Description\n\nInserts questionnaire to database.\n\n## returns\n\nNone"
			},
			"response": []
		},
		{
			"name": "questionnaire",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var expected_result = {\r",
							"    \"questionnaireID\": \"QQ001\",\r",
							"    \"questionnaireTitle\": \"Προτίμηση μαθημάτων\",\r",
							"    \"keywords\": [\r",
							"        \"Courses\",\r",
							"        \"NTUA\",\r",
							"        \"ΕΜΠ\",\r",
							"        \"Μαθήματα\"\r",
							"    ],\r",
							"    \"questions\": [\r",
							"        {\r",
							"            \"qID\": \"P00\",\r",
							"            \"qtext\": \"Ποιο είναι το mail σας;\",\r",
							"            \"required\": \"FALSE\",\r",
							"            \"type\": \"profile\"\r",
							"        },\r",
							"        {\r",
							"            \"qID\": \"P01\",\r",
							"            \"qtext\": \"Ποια είναι η ηλικία σας;\",\r",
							"            \"required\": \"TRUE\",\r",
							"            \"type\": \"profile\"\r",
							"        },\r",
							"        {\r",
							"            \"qID\": \"Q01\",\r",
							"            \"qtext\": \"Ποια κατεύθυνση επιλέξατε;\",\r",
							"            \"required\": \"TRUE\",\r",
							"            \"type\": \"question\"\r",
							"        },\r",
							"        {\r",
							"            \"qID\": \"Q02\",\r",
							"            \"qtext\": \"Ποιο είναι το αγαπημένο σας μάθημα στην κατεύθυνση Λ;\",\r",
							"            \"required\": \"TRUE\",\r",
							"            \"type\": \"question\"\r",
							"        },\r",
							"        {\r",
							"            \"qID\": \"Q03\",\r",
							"            \"qtext\": \"Θα σας ενδιέφερε να μάθετε περισσότερα για software development;\",\r",
							"            \"required\": \"FALSE\",\r",
							"            \"type\": \"question\"\r",
							"        },\r",
							"        {\r",
							"            \"qID\": \"Q04\",\r",
							"            \"qtext\": \"Αναγνωρίζετε όμως ότι η κατεύθυνση πληροφορικής είναι ανώτερη;\",\r",
							"            \"required\": \"TRUE\",\r",
							"            \"type\": \"question\"\r",
							"        },\r",
							"        {\r",
							"            \"qID\": \"Q05\",\r",
							"            \"qtext\": \"Θα επιλέξετε την προχωρημένη ΤΛ στο επόμενο εξάμηνο;\",\r",
							"            \"required\": \"TRUE\",\r",
							"            \"type\": \"question\"\r",
							"        },\r",
							"        {\r",
							"            \"qID\": \"Q06\",\r",
							"            \"qtext\": \"Είστε σίγουροι;\",\r",
							"            \"required\": \"TRUE\",\r",
							"            \"type\": \"question\"\r",
							"        },\r",
							"        {\r",
							"            \"qID\": \"Q07\",\r",
							"            \"qtext\": \"Προτιμάτε τη ροή Υ ή Η;\",\r",
							"            \"required\": \"TRUE\",\r",
							"            \"type\": \"question\"\r",
							"        }\r",
							"    ]\r",
							"}\r",
							"\r",
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Expected Result\", function () {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data).to.eql(expected_result);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:9103/intelliq_api/questionnaire/QQ001",
					"host": [
						"localhost"
					],
					"port": "9103",
					"path": [
						"intelliq_api",
						"questionnaire",
						"QQ001"
					]
				},
				"description": "## Description\n\nReturns the specified questionnaire along with its questions.\n\n## returns\n\nOn success:\n\n``` json\n{\n    \"questionnaireID\": //ID of questionnaire//,\n    \"questionnaireTitle\": //Title of questionnaire//,\n    \"keywords\": //Array of keywords of questionnaire//,\n    \"questions\": [\n     //Array of the questionnaire's questions in the form\n         {\n             \"qID\": //ID of question//,\n             \"qtext\": //The text of the question//,\n             \"required\": //True iff the question is required//,\n             \"type\": //The type (profile or question) of the question//,\n         }\n         //\n     ]\n}\n\n```\n\nOn failure:\n\nNone"
			},
			"response": []
		},
		{
			"name": "questionnaire (csv)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var expected_result = `\"questionnaireID\",\"questionnaireTitle\",\"keywords\",\"qID\",\"qtext\",\"required\",\"type\"\\r\r",
							"\"QQ001\",\"Προτίμηση μαθημάτων\",\"[Courses, NTUA, ΕΜΠ, Μαθήματα]\",\"P00\",\"Ποιο είναι το mail σας;\",\"FALSE\",\"profile\"\\r\r",
							"\"QQ001\",\"Προτίμηση μαθημάτων\",\"[Courses, NTUA, ΕΜΠ, Μαθήματα]\",\"P01\",\"Ποια είναι η ηλικία σας;\",\"TRUE\",\"profile\"\\r\r",
							"\"QQ001\",\"Προτίμηση μαθημάτων\",\"[Courses, NTUA, ΕΜΠ, Μαθήματα]\",\"Q01\",\"Ποια κατεύθυνση επιλέξατε;\",\"TRUE\",\"question\"\\r\r",
							"\"QQ001\",\"Προτίμηση μαθημάτων\",\"[Courses, NTUA, ΕΜΠ, Μαθήματα]\",\"Q02\",\"Ποιο είναι το αγαπημένο σας μάθημα στην κατεύθυνση Λ;\",\"TRUE\",\"question\"\\r\r",
							"\"QQ001\",\"Προτίμηση μαθημάτων\",\"[Courses, NTUA, ΕΜΠ, Μαθήματα]\",\"Q03\",\"Θα σας ενδιέφερε να μάθετε περισσότερα για software development;\",\"FALSE\",\"question\"\\r\r",
							"\"QQ001\",\"Προτίμηση μαθημάτων\",\"[Courses, NTUA, ΕΜΠ, Μαθήματα]\",\"Q04\",\"Αναγνωρίζετε όμως ότι η κατεύθυνση πληροφορικής είναι ανώτερη;\",\"TRUE\",\"question\"\\r\r",
							"\"QQ001\",\"Προτίμηση μαθημάτων\",\"[Courses, NTUA, ΕΜΠ, Μαθήματα]\",\"Q05\",\"Θα επιλέξετε την προχωρημένη ΤΛ στο επόμενο εξάμηνο;\",\"TRUE\",\"question\"\\r\r",
							"\"QQ001\",\"Προτίμηση μαθημάτων\",\"[Courses, NTUA, ΕΜΠ, Μαθήματα]\",\"Q06\",\"Είστε σίγουροι;\",\"TRUE\",\"question\"\\r\r",
							"\"QQ001\",\"Προτίμηση μαθημάτων\",\"[Courses, NTUA, ΕΜΠ, Μαθήματα]\",\"Q07\",\"Προτιμάτε τη ροή Υ ή Η;\",\"TRUE\",\"question\"`;\r",
							"\r",
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Expected Result\", function () {\r",
							"    var data = pm.response.text();\r",
							"    console.log(expected_result);\r",
							"    console.log(data);\r",
							"    pm.expect(data).to.eql(expected_result);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:9103/intelliq_api/questionnaire/QQ001?format=csv",
					"host": [
						"localhost"
					],
					"port": "9103",
					"path": [
						"intelliq_api",
						"questionnaire",
						"QQ001"
					],
					"query": [
						{
							"key": "format",
							"value": "csv"
						}
					]
				},
				"description": "## Description\n\nReturns the specified questionnaire along with its questions.\n\n## returns\n\nOn success:\n\nStartFragment\n\n\"questionnaireID\",\"questionnaireTitle\",\"keywords\",\"qID\",\"qtext\",\"required\",\"type\"\n\n//ID of questionnaire//,//Questionnaire Title//,//keywords//,//ID of question//,//The text of the question//,//True iff the question is required//,//The type (profile or question) of the question//\n\nOn failure:\n\nNone"
			},
			"response": []
		},
		{
			"name": "question",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var expected_result = {\r",
							"    \"questionnaireID\": \"QQ001\",\r",
							"    \"qID\": \"Q01\",\r",
							"    \"qtext\": \"Ποια κατεύθυνση επιλέξατε;\",\r",
							"    \"required\": \"TRUE\",\r",
							"    \"type\": \"question\",\r",
							"    \"options\": [\r",
							"        {\r",
							"            \"optID\": \"Q01A1\",\r",
							"            \"opttxt\": \"Πληροφορική\",\r",
							"            \"nextqID\": \"Q02\"\r",
							"        },\r",
							"        {\r",
							"            \"optID\": \"Q01A2\",\r",
							"            \"opttxt\": \"Ηλεκτρονική\",\r",
							"            \"nextqID\": \"Q07\"\r",
							"        },\r",
							"        {\r",
							"            \"optID\": \"Q01A3\",\r",
							"            \"opttxt\": \"Τηλεπικοινωνίες\",\r",
							"            \"nextqID\": \"Q04\"\r",
							"        },\r",
							"        {\r",
							"            \"optID\": \"Q01A4\",\r",
							"            \"opttxt\": \"Ενέργεια\",\r",
							"            \"nextqID\": \"Q04\"\r",
							"        }\r",
							"    ]\r",
							"}\r",
							"\r",
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Expected Result\", function () {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data).to.eql(expected_result);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:9103/intelliq_api/question/QQ001/Q01",
					"host": [
						"localhost"
					],
					"port": "9103",
					"path": [
						"intelliq_api",
						"question",
						"QQ001",
						"Q01"
					]
				},
				"description": "## Description\n\nReturns all elements of a given question to a given questionnaire.\n\n## returns\n\n``` json\n{\n    \"questionnaireID\": //ID of questionnaire//,\n    \"qID\": //ID of question//,\n    \"qtext\": //The text of the question//,\n    \"required\": //True iff the question is required//,\n    \"type\": //The type (profile or question) of the question//,\n    \"options\": [\n    //Array of the question's options in the form\n        {\n            \"optID\": //ID of option//,\n                \"opttxt\": //The text of the option//,\n                \"nextqID\": //ID of the next question after choosing this option//\n        }\n    //\n    ]\n}\n\n```"
			},
			"response": []
		},
		{
			"name": "question (csv)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var expected_result = `\"questionnaireID\",\"qID\",\"qtext\",\"required\",\"type\",\"optID\",\"opttxt\",\"nextqID\"\\r\r",
							"\"QQ001\",\"Q01\",\"Ποια κατεύθυνση επιλέξατε;\",\"TRUE\",\"question\",\"Q01A1\",\"Πληροφορική\",\"Q02\"\\r\r",
							"\"QQ001\",\"Q01\",\"Ποια κατεύθυνση επιλέξατε;\",\"TRUE\",\"question\",\"Q01A2\",\"Ηλεκτρονική\",\"Q07\"\\r\r",
							"\"QQ001\",\"Q01\",\"Ποια κατεύθυνση επιλέξατε;\",\"TRUE\",\"question\",\"Q01A3\",\"Τηλεπικοινωνίες\",\"Q04\"\\r\r",
							"\"QQ001\",\"Q01\",\"Ποια κατεύθυνση επιλέξατε;\",\"TRUE\",\"question\",\"Q01A4\",\"Ενέργεια\",\"Q04\"`;\r",
							"\r",
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Expected Result\", function () {\r",
							"    var data = pm.response.text();\r",
							"    pm.expect(data).to.eql(expected_result);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:9103/intelliq_api/question/QQ001/Q01?format=csv",
					"host": [
						"localhost"
					],
					"port": "9103",
					"path": [
						"intelliq_api",
						"question",
						"QQ001",
						"Q01"
					],
					"query": [
						{
							"key": "format",
							"value": "csv"
						}
					]
				},
				"description": "## Description\n\nReturns all elements of a given question to a given questionnaire.\n\n## returns\n\n\"questionnaireID\",\"qID\",\"qtext\",\"required\",\"type\",\"optID\",\"opttxt\",\"nextqID\"\n\n//ID of questionnaire//,//ID of question//,//The text of the question//,//True iff the question is required//,//The type (profile or question) of the question//,//IDs of options//,//The texts of the options//,//IDs of the next question after choosing this option//"
			},
			"response": []
		},
		{
			"name": "doanswer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "localhost:9103/intelliq_api/doanswer/QQ001/Q01/0000/Q01A1",
					"host": [
						"localhost"
					],
					"port": "9103",
					"path": [
						"intelliq_api",
						"doanswer",
						"QQ001",
						"Q01",
						"0000",
						"Q01A1"
					]
				},
				"description": "## Description\n\nSubmits an answer to given question of a given questionnaire with a given session number.\n\nIf the question is open-type a json may be provided in the following format:  \n\n``` json\n{ answer: //The answer// }\n\n```\n\n## returns\n\nNone"
			},
			"response": []
		},
		{
			"name": "getsessionanswers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var expected_result = {\r",
							"    \"questionnaireID\": \"QQ001\",\r",
							"    \"session\": \"0000\",\r",
							"    \"answers\": [\r",
							"        {\r",
							"            \"qID\": \"Q01\",\r",
							"            \"ans\": \"Q01A1\"\r",
							"        }\r",
							"    ]\r",
							"}\r",
							"\r",
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Expected Result\", function () {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data).to.eql(expected_result);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:9103/intelliq_api/getsessionanswers/QQ001/0000",
					"host": [
						"localhost"
					],
					"port": "9103",
					"path": [
						"intelliq_api",
						"getsessionanswers",
						"QQ001",
						"0000"
					]
				},
				"description": "## Description\n\nReturns all the answers corresponding to a given session of a given questionnaire.\n\n## returns\n\nOn success:\n\n``` json\n{\n    \"questionnaireID\": //ID of questionnaire//,\n    \"session\": //ID of session//,\n    \"answers\": [\n    // Array of answers to different questions by a submittee in a single session in the form\n        {\n            \"qID\": //ID of question//,\n            \"ans\": //Given answer//\n        }\n    //\n    ]\n}\n\n```\n\nOn failure:\n\nNone"
			},
			"response": []
		},
		{
			"name": "getsessionanswers (csv)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var expected_result = `\"questionnaireID\",\"session\",\"qID\",\"ans\"\\r\r",
							"\"QQ001\",\"0000\",\"Q01\",\"Q01A1\"`;\r",
							"\r",
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Expected Result\", function () {\r",
							"    var data = pm.response.text();\r",
							"    pm.expect(data).to.eql(expected_result);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:9103/intelliq_api/getsessionanswers/QQ001/0000?format=csv",
					"host": [
						"localhost"
					],
					"port": "9103",
					"path": [
						"intelliq_api",
						"getsessionanswers",
						"QQ001",
						"0000"
					],
					"query": [
						{
							"key": "format",
							"value": "csv"
						}
					]
				},
				"description": "## Description\n\nReturns all the answers corresponding to a given session of a given questionnaire.\n\n## returns\n\nOn success:\n\n\"questionnaireID\",\"session\",\"qID\",\"ans\"  \n//ID of questionnaire//,//IDs of session of submission//,//IDs of answered questions//,//Answers//\n\nOn failure:\n\nNone"
			},
			"response": []
		},
		{
			"name": "getquestionanswers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var expected_result = {\r",
							"    \"questionnaireID\": \"QQ001\",\r",
							"    \"questionID\": \"Q01\",\r",
							"    \"answers\": [\r",
							"        {\r",
							"            \"session\": \"0000\",\r",
							"            \"ans\": \"Q01A1\"\r",
							"        }\r",
							"    ]\r",
							"}\r",
							"\r",
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Expected Result\", function () {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data).to.eql(expected_result);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:9103/intelliq_api/getquestionanswers/QQ001/Q01",
					"host": [
						"localhost"
					],
					"port": "9103",
					"path": [
						"intelliq_api",
						"getquestionanswers",
						"QQ001",
						"Q01"
					]
				},
				"description": "## Description\n\nReturns the answers to a given question of a given questionnaire.\n\n## returns\n\nOn success:\n\n``` json\n{\n    \"questionnaireID\": //ID of questionnaire//,\n    \"questionID\": //ID of question//,\n    \"answers\": [\n    // Array of submitted answers to the question in the form\n        {\n            \"session\": //ID of session of submission//,\n            \"ans\": //Given answer//\n        }\n    //\n    ]\n}\n\n```\n\nOn failure:\n\nNone"
			},
			"response": []
		},
		{
			"name": "getquestionanswers (csv)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var expected_result = `\"questionnaireID\",\"questionID\",\"session\",\"ans\"\\r\r",
							"\"QQ001\",\"Q01\",\"0000\",\"Q01A1\"`;\r",
							"\r",
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Expected Result\", function () {\r",
							"    var data = pm.response.text();\r",
							"    pm.expect(data).to.eql(expected_result);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:9103/intelliq_api/getquestionanswers/QQ001/Q01?format=csv",
					"host": [
						"localhost"
					],
					"port": "9103",
					"path": [
						"intelliq_api",
						"getquestionanswers",
						"QQ001",
						"Q01"
					],
					"query": [
						{
							"key": "format",
							"value": "csv"
						}
					]
				},
				"description": "## Description\n\nReturns the answers to a given question of a given questionnaire in csv\n\n## returns\n\nOn success:\n\n\"questionnaireID\",\"questionID\",\"session\",\"ans\"  \n//IDs of questionnaires//,//IDs of questions//,//IDs of session of submission//,//Given answers//\n\nOn failure:\n\nNone"
			},
			"response": []
		},
		{
			"name": "questionnaireanscount",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var expected_result = {\r",
							"    \"Number\": 1\r",
							"};\r",
							"\r",
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Expected Result\", function () {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data).to.eql(expected_result);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "answer",
							"value": "\"hello\"",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "localhost:9103/intelliq_api/questionnaireanscount/QQ001",
					"host": [
						"localhost"
					],
					"port": "9103",
					"path": [
						"intelliq_api",
						"questionnaireanscount",
						"QQ001"
					]
				},
				"description": "## Description\n\nReturns the number of sumbitted answers to a given questionnaire.\n\n## returns\n\n``` json\n{\n    \"Number\": //number of submitted answers//\n}\n\n```"
			},
			"response": []
		},
		{
			"name": "questionnaireanscount (csv)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var expected_result = `\"Number\"\\r\\n1`;\r",
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Expected Result\", function () {\r",
							"    var data = pm.response.text();\r",
							"    pm.expect(data).to.eql(expected_result);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "answer",
							"value": "\"hello\"",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "localhost:9103/intelliq_api/questionnaireanscount/QQ001?format=csv",
					"host": [
						"localhost"
					],
					"port": "9103",
					"path": [
						"intelliq_api",
						"questionnaireanscount",
						"QQ001"
					],
					"query": [
						{
							"key": "format",
							"value": "csv"
						}
					]
				},
				"description": "## Description\n\nReturns the number of sumbitted answers to a given questionnaire.\n\n## returns\n\n\"Number\"  \n//number of submitted answers//"
			},
			"response": []
		},
		{
			"name": "fetchquestionnaires",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var expected_result = [\r",
							"    {\r",
							"        \"QuestionnaireID\": \"QQ001\",\r",
							"        \"QuestionnaireTitle\": \"Προτίμηση μαθημάτων\"\r",
							"    }\r",
							"];\r",
							"\r",
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Expected Result\", function () {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data).to.eql(expected_result);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "keywords[]",
							"value": "NTUA",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "localhost:9103/intelliq_api/fetchquestionnaires",
					"host": [
						"localhost"
					],
					"port": "9103",
					"path": [
						"intelliq_api",
						"fetchquestionnaires"
					]
				},
				"description": "## Description\n\nReturns the available questionnaires with their titles.\n\n## returns\n\n``` json\n[\n    //Array of available questionnaires in the form\n    {\n        \"QuestionnaireID\": //ID of questionnaire//,\n        \"QuestionnaireTitle\": //Title of questionnaire//\n    }\n    //\n]\n\n```"
			},
			"response": []
		},
		{
			"name": "fetchquestionnaires (csv)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"var expected_result = `\"QuestionnaireID\",\"QuestionnaireTitle\"\\r\r",
							"\"QQ001\",\"Προτίμηση μαθημάτων\"`;\r",
							"\r",
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Expected Result\", function () {\r",
							"    var data = pm.response.text();\r",
							"    pm.expect(data).to.eql(expected_result);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "keywords[]",
							"value": "NTUA",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "localhost:9103/intelliq_api/fetchquestionnaires?format=csv",
					"host": [
						"localhost"
					],
					"port": "9103",
					"path": [
						"intelliq_api",
						"fetchquestionnaires"
					],
					"query": [
						{
							"key": "format",
							"value": "csv"
						}
					]
				},
				"description": "## Description\n\nReturns the available questionnaires with their titles.\n\n## returns\n\n\"QuestionnaireID\",\"QuestionnaireTitle\"  \n//ID of questionnaires//,//Titles of questionnaires//"
			},
			"response": []
		},
		{
			"name": "questionnairedump",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var expected_result = {\r",
							"    \"questionnaireID\": \"QQ001\",\r",
							"    \"questionnaireTitle\": \"Προτίμηση μαθημάτων\",\r",
							"    \"keywords\": [\r",
							"        \"Courses\",\r",
							"        \"NTUA\",\r",
							"        \"ΕΜΠ\",\r",
							"        \"Μαθήματα\"\r",
							"    ],\r",
							"    \"questions\": [\r",
							"        {\r",
							"            \"qID\": \"P00\",\r",
							"            \"qtext\": \"Ποιο είναι το mail σας;\",\r",
							"            \"required\": \"FALSE\",\r",
							"            \"type\": \"profile\",\r",
							"            \"options\": [\r",
							"                {\r",
							"                    \"optID\": \"P00TXT\",\r",
							"                    \"opttxt\": \"<open string>\",\r",
							"                    \"nextqID\": \"P01\"\r",
							"                }\r",
							"            ]\r",
							"        },\r",
							"        {\r",
							"            \"qID\": \"P01\",\r",
							"            \"qtext\": \"Ποια είναι η ηλικία σας;\",\r",
							"            \"required\": \"TRUE\",\r",
							"            \"type\": \"profile\",\r",
							"            \"options\": [\r",
							"                {\r",
							"                    \"optID\": \"P01A1\",\r",
							"                    \"opttxt\": \"<30\",\r",
							"                    \"nextqID\": \"Q01\"\r",
							"                },\r",
							"                {\r",
							"                    \"optID\": \"P01A2\",\r",
							"                    \"opttxt\": \">=30\",\r",
							"                    \"nextqID\": \"Q01\"\r",
							"                }\r",
							"            ]\r",
							"        },\r",
							"        {\r",
							"            \"qID\": \"Q01\",\r",
							"            \"qtext\": \"Ποια κατεύθυνση επιλέξατε;\",\r",
							"            \"required\": \"TRUE\",\r",
							"            \"type\": \"question\",\r",
							"            \"options\": [\r",
							"                {\r",
							"                    \"optID\": \"Q01A1\",\r",
							"                    \"opttxt\": \"Πληροφορική\",\r",
							"                    \"nextqID\": \"Q02\"\r",
							"                },\r",
							"                {\r",
							"                    \"optID\": \"Q01A2\",\r",
							"                    \"opttxt\": \"Ηλεκτρονική\",\r",
							"                    \"nextqID\": \"Q07\"\r",
							"                },\r",
							"                {\r",
							"                    \"optID\": \"Q01A3\",\r",
							"                    \"opttxt\": \"Τηλεπικοινωνίες\",\r",
							"                    \"nextqID\": \"Q04\"\r",
							"                },\r",
							"                {\r",
							"                    \"optID\": \"Q01A4\",\r",
							"                    \"opttxt\": \"Ενέργεια\",\r",
							"                    \"nextqID\": \"Q04\"\r",
							"                }\r",
							"            ]\r",
							"        },\r",
							"        {\r",
							"            \"qID\": \"Q02\",\r",
							"            \"qtext\": \"Ποιο είναι το αγαπημένο σας μάθημα στην κατεύθυνση Λ;\",\r",
							"            \"required\": \"TRUE\",\r",
							"            \"type\": \"question\",\r",
							"            \"options\": [\r",
							"                {\r",
							"                    \"optID\": \"Q02A1\",\r",
							"                    \"opttxt\": \"Αλγόριθμοι & Πολυπλοκότητα, θα πάρω και τα προχωρημένα\",\r",
							"                    \"nextqID\": \"Q06\"\r",
							"                },\r",
							"                {\r",
							"                    \"optID\": \"Q02A2\",\r",
							"                    \"opttxt\": \"Τεχνολογία Λογισμικού\",\r",
							"                    \"nextqID\": \"Q03\"\r",
							"                }\r",
							"            ]\r",
							"        },\r",
							"        {\r",
							"            \"qID\": \"Q03\",\r",
							"            \"qtext\": \"Θα σας ενδιέφερε να μάθετε περισσότερα για software development;\",\r",
							"            \"required\": \"FALSE\",\r",
							"            \"type\": \"question\",\r",
							"            \"options\": [\r",
							"                {\r",
							"                    \"optID\": \"Q03A1\",\r",
							"                    \"opttxt\": \"Ναι\",\r",
							"                    \"nextqID\": \"Q05\"\r",
							"                },\r",
							"                {\r",
							"                    \"optID\": \"Q03A2\",\r",
							"                    \"opttxt\": \"Όχι\",\r",
							"                    \"nextqID\": \"Q05\"\r",
							"                }\r",
							"            ]\r",
							"        },\r",
							"        {\r",
							"            \"qID\": \"Q04\",\r",
							"            \"qtext\": \"Αναγνωρίζετε όμως ότι η κατεύθυνση πληροφορικής είναι ανώτερη;\",\r",
							"            \"required\": \"TRUE\",\r",
							"            \"type\": \"question\",\r",
							"            \"options\": [\r",
							"                {\r",
							"                    \"optID\": \"Q04A1\",\r",
							"                    \"opttxt\": \"Ναι\",\r",
							"                    \"nextqID\": \"-\"\r",
							"                },\r",
							"                {\r",
							"                    \"optID\": \"Q04A2\",\r",
							"                    \"opttxt\": \"Ναι\",\r",
							"                    \"nextqID\": \"-\"\r",
							"                }\r",
							"            ]\r",
							"        },\r",
							"        {\r",
							"            \"qID\": \"Q05\",\r",
							"            \"qtext\": \"Θα επιλέξετε την προχωρημένη ΤΛ στο επόμενο εξάμηνο;\",\r",
							"            \"required\": \"TRUE\",\r",
							"            \"type\": \"question\",\r",
							"            \"options\": [\r",
							"                {\r",
							"                    \"optID\": \"Q05A1\",\r",
							"                    \"opttxt\": \"Ναι\",\r",
							"                    \"nextqID\": \"-\"\r",
							"                },\r",
							"                {\r",
							"                    \"optID\": \"Q05A2\",\r",
							"                    \"opttxt\": \"Όχι\",\r",
							"                    \"nextqID\": \"-\"\r",
							"                }\r",
							"            ]\r",
							"        },\r",
							"        {\r",
							"            \"qID\": \"Q06\",\r",
							"            \"qtext\": \"Είστε σίγουροι;\",\r",
							"            \"required\": \"TRUE\",\r",
							"            \"type\": \"question\",\r",
							"            \"options\": [\r",
							"                {\r",
							"                    \"optID\": \"Q06A1\",\r",
							"                    \"opttxt\": \"Ναι\",\r",
							"                    \"nextqID\": \"-\"\r",
							"                },\r",
							"                {\r",
							"                    \"optID\": \"Q06A2\",\r",
							"                    \"opttxt\": \"Όχι\",\r",
							"                    \"nextqID\": \"-\"\r",
							"                }\r",
							"            ]\r",
							"        },\r",
							"        {\r",
							"            \"qID\": \"Q07\",\r",
							"            \"qtext\": \"Προτιμάτε τη ροή Υ ή Η;\",\r",
							"            \"required\": \"TRUE\",\r",
							"            \"type\": \"question\",\r",
							"            \"options\": [\r",
							"                {\r",
							"                    \"optID\": \"Q07A1\",\r",
							"                    \"opttxt\": \"Ροή Υ\",\r",
							"                    \"nextqID\": \"-\"\r",
							"                },\r",
							"                {\r",
							"                    \"optID\": \"Q07A2\",\r",
							"                    \"opttxt\": \"Ροή Η\",\r",
							"                    \"nextqID\": \"-\"\r",
							"                }\r",
							"            ]\r",
							"        }\r",
							"    ]\r",
							"}\r",
							"\r",
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Expected Result\", function () {\r",
							"    var data = pm.response.json();\r",
							"    pm.expect(data).to.eql(expected_result);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": []
				},
				"url": {
					"raw": "localhost:9103/intelliq_api/questionnairedump/QQ001",
					"host": [
						"localhost"
					],
					"port": "9103",
					"path": [
						"intelliq_api",
						"questionnairedump",
						"QQ001"
					]
				},
				"description": "## Description\n\nDumps all elements (keywords + questions + options for every question) of the selected questionnaire\n\n## returns\n\n``` json\n{\n    \"questionnaireID\": //ID of questionnaire//,\n    \"questionnaireTitle\": //Title of questionnaire//,\n    \"keywords\": //Array of keywords of questionnaire//,\n    \"questions\": [\n     //Array of the questionnaire's questions in the form\n         {\n             \"qID\": //ID of question//,\n             \"qtext\": //The text of the question//,\n             \"required\": //True iff the question is required//,\n             \"type\": //The type (profile or question) of the question//,\n             \"options\": [\n                 //Array of the question's options in the form\n                 {\n                     \"optID\": //ID of option//,\n                     \"opttxt\": //The text of the option//,\n                     \"nextqID\": //ID of the next question after choosing this option//\n                 }\n                 //\n              ]\n         }\n         //\n     ]\n}\n\n```"
			},
			"response": []
		}
	]
}